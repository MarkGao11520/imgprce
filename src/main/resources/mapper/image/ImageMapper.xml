<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hw.xyls.dao.image.ImageMapper" >
  <resultMap id="BaseResultMap" type="com.hw.xyls.pojo.image.Image" >
    <id column="imageId" property="imageid" jdbcType="INTEGER" />
    <result column="imagePath" property="imagepath" jdbcType="VARCHAR" />
    <result column="upload_time" property="uploadTime" jdbcType="BIGINT" />
    <result column="adminId" property="adminid" jdbcType="INTEGER" />
    <result column="isdel" property="isdel" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="classid" property="classid" jdbcType="INTEGER" />
    <association column="classid" property="classes" select="com.hw.xyls.dao.image.ClassesMapper.selectByPrimaryKey"></association>
    <association column="adminId" property="user" select="com.hw.xyls.dao.user.UserMapper.selectByPrimaryKey"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    imageId, imagePath, upload_time, adminId, isdel, state, classid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_image
    where imageId = #{imageid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_image
    where imageId = #{imageid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hw.xyls.pojo.image.Image" >
    insert into tb_image (imageId, imagePath, upload_time, 
      adminId, isdel, state, 
      classid)
    values (#{imageid,jdbcType=INTEGER}, #{imagepath,jdbcType=VARCHAR}, #{uploadTime,jdbcType=BIGINT}, 
      #{adminid,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, 
      #{classid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hw.xyls.pojo.image.Image" >
    insert into tb_image
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="imageid != null" >
        imageId,
      </if>
      <if test="imagepath != null" >
        imagePath,
      </if>
      <if test="uploadTime != null" >
        upload_time,
      </if>
      <if test="adminid != null" >
        adminId,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="classid != null" >
        classid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="imageid != null" >
        #{imageid,jdbcType=INTEGER},
      </if>
      <if test="imagepath != null" >
        #{imagepath,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        #{uploadTime,jdbcType=BIGINT},
      </if>
      <if test="adminid != null" >
        #{adminid,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="classid != null" >
        #{classid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hw.xyls.pojo.image.Image" >
    update tb_image
    <set >
      <if test="imagepath != null" >
        imagePath = #{imagepath,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null" >
        upload_time = #{uploadTime,jdbcType=BIGINT},
      </if>
      <if test="adminid != null" >
        adminId = #{adminid,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="classid != null" >
        classid = #{classid,jdbcType=INTEGER},
      </if>
    </set>
    where imageId = #{imageid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hw.xyls.pojo.image.Image" >
    update tb_image
    set imagePath = #{imagepath,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=BIGINT},
      adminId = #{adminid,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      classid = #{classid,jdbcType=INTEGER}
    where imageId = #{imageid,jdbcType=INTEGER}
  </update>

  <select id="selectUnGroupedImagesList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    FROM tb_image
    WHERE isdel = 0
    AND classid is NULL
  </select>

  <select id="selectImagesList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    FROM tb_image
    WHERE isdel = 0
    <if test="dto.state!=null">
    AND state = #{dto.state}
    </if>
  </select>

  <update id="picturesGrouping">
    <foreach collection="list" item="item" separator=";">
      UPDATE  tb_image
      SET classid = #{item.classid,jdbcType=INTEGER}
      WHERE imageId = #{item.imageid,jdbcType=INTEGER}
    </foreach>
  </update>

  <update id="doImageComplate">
    update tb_image
    SET state = 2
    WHERE
    imageId IN
    <foreach collection="list" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </update>

  <select id="selectImageByKey" resultType="com.hw.xyls.pojo.image.Image">
    SELECT
        DISTINCT i.imageId as imageid, i.imagePath as imagepath, i.upload_time as updateTime, i.adminId as adminid, i.isdel, i.state, i.classid
    FROM
        tb_label t
    LEFT JOIN tb_image i ON t.imageId = i.imageId
    WHERE
        t.lableName LIKE #{key}
  </select>
</mapper>